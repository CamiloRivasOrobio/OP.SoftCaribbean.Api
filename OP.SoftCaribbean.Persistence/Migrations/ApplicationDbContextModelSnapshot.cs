// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OP.SoftCaribbean.Persistence.Context;

#nullable disable

namespace OP.SoftCaribbean.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.DataMaestra", b =>
                {
                    b.Property<string>("nmdato")
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.Property<string>("cddato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar");

                    b.Property<string>("cddato1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("cddato2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("cddato3")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("dsddato")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("febaja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("feregistro")
                        .HasColumnType("datetime");

                    b.Property<string>("nmmaestro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.HasKey("nmdato");

                    b.HasIndex("nmmaestro");

                    b.ToTable("DataMaestra", (string)null);
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Maestras", b =>
                {
                    b.Property<string>("nmmaestro")
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.Property<string>("cdmaestro")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(true)
                        .HasColumnType("varchar");

                    b.Property<string>("dsmaestro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("febaja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("feregistro")
                        .HasColumnType("datetime");

                    b.HasKey("nmmaestro");

                    b.ToTable("Maestras", (string)null);
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Pacientes", b =>
                {
                    b.Property<int>("nmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nmid"));

                    b.Property<string>("cdusuario")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar");

                    b.Property<string>("dsarl")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("dscondicion")
                        .HasColumnType("text");

                    b.Property<string>("dseps")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("febaja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("feregistro")
                        .HasColumnType("datetime");

                    b.Property<int>("nmidMedicotra")
                        .HasColumnType("int");

                    b.Property<int>("nmidPersona")
                        .HasColumnType("int");

                    b.HasKey("nmid");

                    b.HasIndex("nmidMedicotra");

                    b.HasIndex("nmidPersona");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Personas", b =>
                {
                    b.Property<int>("nmid")
                        .HasColumnType("int");

                    b.Property<string>("cddocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar");

                    b.Property<string>("cdgenero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("cdtelefonoFijo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar")
                        .HasColumnName("cdtelefono_fijo");

                    b.Property<string>("cdtelefonoMovil")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar")
                        .HasColumnName("cdtelefono_movil");

                    b.Property<string>("cdtipo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("cdusuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.Property<string>("dsapellidos")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("dsdireccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("dsemail")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("dsnombres")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("dsphoto")
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("febaja")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("fenacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("feregistro")
                        .HasColumnType("datetime");

                    b.HasKey("nmid");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.DataMaestra", b =>
                {
                    b.HasOne("OP.SoftCaribbean.Domain.Entities.Maestras", "nmmaestroNavigation")
                        .WithMany("DataMaestra")
                        .HasForeignKey("nmmaestro")
                        .IsRequired()
                        .HasConstraintName("FK01_DataMaestra_Maestras");

                    b.Navigation("nmmaestroNavigation");
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Pacientes", b =>
                {
                    b.HasOne("OP.SoftCaribbean.Domain.Entities.Personas", "nmidMedicotraNavigation")
                        .WithMany("PacienteNmidMedicotraNavigations")
                        .HasForeignKey("nmidMedicotra")
                        .IsRequired()
                        .HasConstraintName("FK02_Pacientes_Personas");

                    b.HasOne("OP.SoftCaribbean.Domain.Entities.Personas", "nmidPersonaNavigation")
                        .WithMany("PacienteNmidPersonaNavigations")
                        .HasForeignKey("nmidPersona")
                        .IsRequired()
                        .HasConstraintName("FK01_Pacientes_Personas");

                    b.Navigation("nmidMedicotraNavigation");

                    b.Navigation("nmidPersonaNavigation");
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Maestras", b =>
                {
                    b.Navigation("DataMaestra");
                });

            modelBuilder.Entity("OP.SoftCaribbean.Domain.Entities.Personas", b =>
                {
                    b.Navigation("PacienteNmidMedicotraNavigations");

                    b.Navigation("PacienteNmidPersonaNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
